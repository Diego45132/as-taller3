# Configuración básica de nginx como proxy reverso
events {
    worker_connections 1024;
}

http {
    upstream webapp {
        # Upstream para la aplicación Flask
        server webapp:5000;
    }

    upstream api {
        # Upstream para la API FastAPI
        server api:8000;
    }

    server {
        listen 80;
        server_name localhost;

        # Proxy hacia la aplicación web Flask
        location / {
            proxy_pass http://webapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Proxy hacia la API FastAPI
        location /api/ {
            proxy_pass http://api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Servir archivos estáticos directamente (ajusta la ruta raíz según donde estén tus archivos estáticos)
        location /static/ {
            root /usr/share/nginx/html;  # Por ejemplo, donde montes los archivos estáticos
            access_log off;
            expires max;
        }

        # Configuración de logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
}
